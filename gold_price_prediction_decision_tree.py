# -*- coding: utf-8 -*-
"""Gold_Price_Prediction_Decision_Tree.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1jmixTIYapBUgqpmo8uZnHC4UjYLJvsre
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.model_selection import train_test_split
from sklearn import tree
from sklearn import metrics

df=pd.read_csv('/content/drive/MyDrive/dataset/gld_price_data.csv')

df.describe()

df.info()

#We will be predicting gold price
df.head()

df.tail()

df.shape

correlation=df.corr()

plt.figure(figsize=(8,8), dpi=75)
sns.heatmap(correlation,cbar=True, square=True, fmt='.1f',annot=True, annot_kws={'size':8},cmap='Blues')

sns.distplot(df['GLD'],color='red')

print(correlation['GLD'])

#spliting data
X=df.drop(['Date','GLD'],axis=1)
Y=df['GLD']

print(X.shape,Y.shape)

train_X,test_X, train_Y, test_Y=train_test_split(X,Y,test_size=0.2,random_state=13)

print(train_X.shape, test_X.shape, train_Y.shape, test_Y.shape )

DT_model=tree.DecisionTreeClassifier()
train_Y.shape

from sklearn import preprocessing
from sklearn import utils

lab_enc = preprocessing.LabelEncoder()
encoded_Y = lab_enc.fit_transform(train_Y)

print(train_Y)

print(encoded_Y)

DT_model=DT_model.fit(train_X,encoded_Y)

predictions=DT_model.predict(test_X)
print(predictions)





plt.figure(figsize=(8,8),dpi=75)
plt.scatter(test_Y,predictions)
plt.xlabel('Original Values')
plt.ylabel('Predicted Values')
plt.title("Original vs Predicted Values")

